Toms AVR macro assembler version 1.23 (Aug  7 2011,)
Copyright (C) 1998-2005 - Tom Mortensen
E-mail: tom@tavrasm.org  WWW: http://www.tavrasm.org

+------------------+-----------------------------------------------------------+
| Value            | Text                                                      |
|------------------|-----------------------------------------------------------|
|                  | .include "/home/marik/2313def.inc"
|                  | ;***************************************************************************
|                  | ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
|                  | ;* 
|                  | ;* Number               :AVR000
|                  | ;* File Name            :"2313def.inc"
|                  | ;* Title                :Register/Bit Definitions for the AT90S2313
|                  | ;* Date                 :99.01.28
|                  | ;* Version              :1.30
|                  | ;* Support E-Mail       :avr@atmel.com
|                  | ;* Target MCU           :AT90S2313
|                  | ;*
|                  | ;* DESCRIPTION
|                  | ;* When including this file in the assembly program file, all I/O register
|                  | ;* names and I/O register bit names appearing in the data book can be used.
|                  | ;* 
|                  | ;* The Register names are represented by their hexadecimal addresses.
|                  | ;* 
|                  | ;* The Register Bit names are represented by their bit number (0-7).
|                  | ;* 
|                  | ;* Please observe the difference in using the bit names with instructions
|                  | ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc" 
|                  | ;* (skip if bit in register set/cleared). The following example illustrates
|                  | ;* this:
|                  | ;* 
|                  | ;* in   r16,PORTB               ;read PORTB latch
|                  | ;* sbr  r16,(1<<PB6)+(1<<PB5)   ;set PB6 and PB5 (use masks, not bit#)
|                  | ;* out  PORTB,r16               ;output to PORTB
|                  | ;*
|                  | ;* in   r16,TIFR                ;read the Timer Interrupt Flag Register
|                  | ;* sbrc r16,TOV0                ;test the overflow flag (use bit#)
|                  | ;* rjmp TOV0_is_set             ;jump if set
|                  | ;* ...                          ;otherwise do something else
|                  | ;***************************************************************************
|                  | 
|                  | ;***** Specify Device
|                  | .device AT90S2313
|                  | 
|                  | ;***** I/O Register Definitions
|                  | .equ    SREG    =$3f
|                  | .equ    SPL     =$3d
|                  | .equ    GIMSK   =$3b
|                  | .equ    GIFR    =$3a
|                  | .equ    TIMSK   =$39
|                  | .equ    TIFR    =$38
|                  | .equ    MCUCR   =$35
|                  | .equ    TCCR0   =$33
|                  | .equ    TCNT0   =$32
|                  | .equ    TCCR1A  =$2f
|                  | .equ    TCCR1B  =$2e
|                  | .equ    TCNT1H  =$2d
|                  | .equ    TCNT1L  =$2c
|                  | .equ    OCR1AH  =$2b
|                  | .equ    OCR1AL  =$2a
|                  | .equ    ICR1H   =$25
|                  | .equ    ICR1L   =$24
|                  | .equ    WDTCR   =$21
|                  | .equ    EEAR    =$1e
|                  | .equ    EEARL   =$1e
|                  | .equ    EEDR    =$1d
|                  | .equ    EECR    =$1c
|                  | .equ    PORTB   =$18
|                  | .equ    DDRB    =$17
|                  | .equ    PINB    =$16
|                  | .equ    PORTD   =$12
|                  | .equ    DDRD    =$11
|                  | .equ    PIND    =$10
|                  | .equ    UDR     =$0c
|                  | .equ    USR     =$0b
|                  | .equ    UCR     =$0a
|                  | .equ    UBRR    =$09
|                  | .equ    ACSR    =$08
|                  | 
|                  | 
|                  | ;***** Bit Definitions
|                  | .equ    SP7     =7
|                  | .equ    SP6     =6
|                  | .equ    SP5     =5
|                  | .equ    SP4     =4
|                  | .equ    SP3     =3
|                  | .equ    SP2     =2
|                  | .equ    SP1     =1
|                  | .equ    SP0     =0
|                  | 
|                  | .equ    INT1    =7
|                  | .equ    INT0    =6
|                  | 
|                  | .equ    INTF1   =7
|                  | .equ    INTF0   =6
|                  | 
|                  | .equ    TOIE1   =7
|                  | .equ    OCIE1A  =6
|                  | .equ    TICIE   =3
|                  | .equ    TOIE0   =1
|                  | 
|                  | .equ    TOV1    =7
|                  | .equ    OCF1A   =6
|                  | .equ    ICF1    =3
|                  | .equ    TOV0    =1
|                  | 
|                  | .equ    SE      =5
|                  | .equ    SM      =4
|                  | .equ    ISC11   =3
|                  | .equ    ISC10   =2
|                  | .equ    ISC01   =1
|                  | .equ    ISC00   =0
|                  | 
|                  | .equ    CS02    =2
|                  | .equ    CS01    =1
|                  | .equ    CS00    =0
|                  | 
|                  | .equ    COM1A1  =7
|                  | .equ    COM1A0  =6
|                  | .equ    PWM11   =1
|                  | .equ    PWM10   =0
|                  | 
|                  | .equ    ICNC1   =7
|                  | .equ    ICES1   =6
|                  | .equ    CTC1    =3
|                  | .equ    CS12    =2
|                  | .equ    CS11    =1
|                  | .equ    CS10    =0
|                  | 
|                  | .equ    WDTOE   =4
|                  | .equ    WDE     =3
|                  | .equ    WDP2    =2
|                  | .equ    WDP1    =1
|                  | .equ    WDP0    =0
|                  | 
|                  | .equ    EEMWE   =2
|                  | .equ    EEWE    =1
|                  | .equ    EERE    =0
|                  | 
|                  | .equ    PB7     =7
|                  | .equ    PB6     =6
|                  | .equ    PB5     =5
|                  | .equ    PB4     =4
|                  | .equ    PB3     =3
|                  | .equ    PB2     =2
|                  | .equ    PB1     =1
|                  | .equ    PB0     =0
|                  | 
|                  | .equ    DDB7    =7
|                  | .equ    DDB6    =6
|                  | .equ    DDB5    =5
|                  | .equ    DDB4    =4
|                  | .equ    DDB3    =3
|                  | .equ    DDB2    =2
|                  | .equ    DDB1    =1
|                  | .equ    DDB0    =0
|                  | 
|                  | .equ    PINB7   =7
|                  | .equ    PINB6   =6
|                  | .equ    PINB5   =5
|                  | .equ    PINB4   =4
|                  | .equ    PINB3   =3
|                  | .equ    PINB2   =2
|                  | .equ    PINB1   =1
|                  | .equ    PINB0   =0
|                  | 
|                  | .equ    PD6     =6
|                  | .equ    PD5     =5
|                  | .equ    PD4     =4
|                  | .equ    PD3     =3
|                  | .equ    PD2     =2
|                  | .equ    PD1     =1
|                  | .equ    PD0     =0
|                  | 
|                  | .equ    DDD6    =6
|                  | .equ    DDD5    =5
|                  | .equ    DDD4    =4
|                  | .equ    DDD3    =3
|                  | .equ    DDD2    =2
|                  | .equ    DDD1    =1
|                  | .equ    DDD0    =0
|                  | 
|                  | .equ    PIND6   =6
|                  | .equ    PIND5   =5
|                  | .equ    PIND4   =4
|                  | .equ    PIND3   =3
|                  | .equ    PIND2   =2
|                  | .equ    PIND1   =1
|                  | .equ    PIND0   =0
|                  | 
|                  | .equ    RXC     =7
|                  | .equ    TXC     =6
|                  | .equ    UDRE    =5
|                  | .equ    FE      =4
|                  | ;.equ   OR      =3
|                  | 
|                  | .equ    RXCIE   =7
|                  | .equ    TXCIE   =6
|                  | .equ    UDRIE   =5
|                  | .equ    RXEN    =4
|                  | .equ    TXEN    =3
|                  | .equ    CHR9    =2
|                  | .equ    RXB8    =1
|                  | .equ    TXB8    =0
|                  | 
|                  | .equ    ACD     =7
|                  | .equ    ACO     =5
|                  | .equ    ACI     =4
|                  | .equ    ACIE    =3
|                  | .equ    ACIC    =2
|                  | .equ    ACIS1   =1
|                  | .equ    ACIS0   =0
|                  | 
|                  | .def    XL      =r26
|                  | .def    XH      =r27
|                  | .def    YL      =r28
|                  | .def    YH      =r29
|                  | .def    ZL      =r30
|                  | .def    ZH      =r31
|                  | 
|                  | .equ    RAMEND  =$DF    ;Last On-Chip SRAM Location
|                  | .equ    XRAMEND =$DF
|                  | .equ    E2END   =$7F
|                  | .equ    FLASHEND=$3FF
|                  | 
|                  | 
|                  | .equ    INT0addr=$001   ;External Interrupt0 Vector Address
|                  | .equ    INT1addr=$002   ;External Interrupt1 Vector Address
|                  | .equ    ICP1addr=$003   ;Input Capture1 Interrupt Vector Address
|                  | .equ    OC1addr =$004   ;Output Compare1 Interrupt Vector Address
|                  | .equ    OVF1addr=$005   ;Overflow1 Interrupt Vector Address
|                  | .equ    OVF0addr=$006   ;Overflow0 Interrupt Vector Address
|                  | .equ    URXCaddr=$007   ;UART Receive Complete Interrupt Vector Address
|                  | .equ    UDREaddr=$008   ;UART Data Register Empty Interrupt Vector Address
|                  | .equ    UTXCaddr=$009   ;UART Transmit Complete Interrupt Vector Address
|                  | .equ    ACIaddr =$00a   ;Analog Comparator Interrupt Vector Address
|                  | 
|                  | 
|                  | .def     Temp=R16
|                  | .def     Temp1=R17
|                  | .def     Temp2=R18
|                  | .def     Temp3=R19
|                  | .def     Temp4=R20
|                  | 
|                  | .cseg
|                  | .org 0
|                  | 
| 000000 C015      | rjmp Reset
| 000001 C013      | rjmp INT_0
| 000002 C012      | rjmp INT_1
| 000003 C011      | rjmp Timer1_capt1
| 000004 C023      | rjmp Timer1_comp1
| 000005 C00F      | rjmp Timer1_OVF1
| 000006 C00E      | rjmp Timer0_OVF0
| 000007 C00D      | rjmp UART_RX
| 000008 C00C      | rjmp UART_UDRE
| 000009 C00B      | rjmp UART_TX
| 00000A C00A      | rjmp ANA_COMP
| 00000B C009      | rjmp PCINT0
| 00000C C008      | rjmp TIM1COMPB
| 00000D C007      | rjmp TIM0COMPA
| 00000E C006      | rjmp TIM0COMPB
| 00000F C005      | rjmp USISTART
| 000010 C004      | rjmp USIOVERFLOW
| 000011 C003      | rjmp EEREADY
| 000012 C002      | rjmp WDTOVERFLOW
| 000013 C001      | rjmp PCINT1
| 000014 C000      | rjmp PCINT2
|                  | 
|                  | ;Reset:
|                  | INT_0:
|                  | INT_1:
|                  | Timer1_capt1:
|                  | ;Timer1_comp1:
|                  | Timer1_OVF1:
|                  | Timer0_OVF0:
|                  | UART_RX:
|                  | UART_UDRE:
|                  | UART_TX:
|                  | ANA_COMP:
|                  | PCINT0:
|                  | TIM1COMPB:
|                  | TIM0COMPA:
|                  | TIM0COMPB:
|                  | USISTART:
|                  | USIOVERFLOW:
|                  | EEREADY:
|                  | WDTOVERFLOW:
|                  | PCINT1:
|                  | PCINT2:
| 000015 9518      |           reti
|                  | ;****************************************************
|                  | ; ИНИЦИАЛИЗАЦИЯ
|                  | ;****************************************************
| 000016 ED0F      | Reset:  ldi Temp,RamEnd         ;Инициализация стека
| 000017 BF0D      |         out SPL,Temp
|                  | 
| 000018 EF0F      |         ldi Temp,0b11111111     ;Настройка порта B
| 000019 BB07      |         out DDRB,Temp
|                  | 
| 00001A E400      |         ldi Temp,0b01000000     ;разрешить прерывание компаратора
| 00001B BF09      |         out TIMSK,Temp
|                  | 
|                  |         
| 00001C E003      |         ldi Temp,0b00000011
| 00001D BD0E      |         out TCCR1B,Temp         ;тактовый сигнал = CK/64
|                  | 
| 00001E E908      |         ldi Temp,0x98           ;инициализация компаратора
| 00001F BD0B      |         out OCR1AH,Temp
| 000020 E906      |         ldi Temp,0x96
| 000021 BD0A      |         out OCR1AL,Temp
|                  | 
| 000022 E000      |         ldi Temp,0              ;Сброс счётчика
| 000023 BD0D      |         out TCNT1H,Temp
| 000024 BD0C      |         out TCNT1L,Temp
|                  | 
| 000025 E011      |         ldi Temp1,0b00000001    ;инициализация индикатора
|                  | 
| 000026 9478      |         sei                     ;разрешить прерывания
|                  | ;****************************************************
|                  | ; ОСНОВНОЙ ЦИКЛ
|                  | ;****************************************************
| 000027 CFFF      | Inf:      rjmp Inf              ;бесконечный цикл
|                  | 
|                  | 
|                  | ;****************************************************
|                  | ; ОБРАБОТЧИК ПРЕРЫВАНИЯ КОМПАРАТОРА
|                  | ;****************************************************
|                  | 
|                  | Timer1_comp1:
| 000028 E000      |         ldi Temp,0              ;Сброс счётчика
| 000029 BD0D      |         out TCNT1H,Temp
| 00002A BD0C      |         out TCNT1L,Temp
| 00002B 3810      | Shift:  cpi Temp1,0b10000000    ;сравнить с крайним знач.
| 00002C F011      |         breq Init               ;если равно - загрузка нач. знач.
|                  | 
| 00002D 0F11      |         lsl Temp1               ;иначе - сдвиг влево
| 00002E C001      |         rjmp Output             ;перейти на вывод в порт
|                  | 
| 00002F E011      | Init:   ldi Temp1,0b00000001    ;загрузить нач. значение
| 000030 BB18      | Output: out PortB,Temp1         ;вывод в порт
|                  | 
| 000031 9518      |         reti                    ;выход из обработчика
|                  | 
+------------------+-----------------------------------------------------------+

Errors      : 0
Warnings    : 0
Code        : 50
Rom         : 0
Data        : 0
Unused Code : 0
Unused Rom  : 0
