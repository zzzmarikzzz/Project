; Контроллер ШИМ
.include "/home/marik/Project/tn13Adef.inc"
.def	Temp=R16

.DSEG
Pointer:	.byte	1
Bufer:	.byte	16

.cseg
.org 0

RESET:	CLI
	LDI Temp,RamEnd		;инициализация стека
	OUT SPL,Temp

	CLR R16
	STS Pointer, R16

	OUT OCR0A, R16

	CLR R16	;очищаем все 16 ячеек буфера
	CLR R17
	LDI XL, LOW(Bufer)
	LDI XH, HIGH(Bufer)
Cleaning:
	ST X+, R16
	INC R17
	CPI R17, 0X10
	BRLO Cleaning

;Настройка FastPWM
	LDI Temp, 1<<0
	OUT DDRB, Temp

	IN Temp, TCCR0A
	ANDI Temp, ~(1<<WGM01|1<<WGM00|1<<COM0A1|1<<COM0A0)
	ORI Temp, 1<<WGM01|1<<WGM00|1<<COM0A1|0<<COM0A0
	OUT TCCR0A, Temp

	IN Temp, TCCR0B
	ANDI Temp, ~(1<<WGM02|1<<CS02|1<<CS01|1<<CS00)
	ORI Temp, 0<<WGM02|0<<CS02|1<<CS01|0<<CS00
	OUT TCCR0B, Temp


; Настройка АЦП
	IN Temp, ADMUX
	ANDI Temp, ~(1<<REFS0|1<<ADLAR|1<<MUX1|1<<MUX0)
	ORI Temp, 0<<REFS0|1<<ADLAR|0<<MUX1|1<<MUX0
	OUT ADMUX, Temp

	IN Temp, ADCSRA
	ANDI Temp, ~(1<<ADEN|1<<ADSC|1<<ADATE|1<<ADPS2|1<<ADPS1|1<<ADPS0)
	ORI Temp, 1<<ADEN|1<<ADSC|1<<ADATE|0<<ADPS2|1<<ADPS1|1<<ADPS0
	OUT ADCSRA, Temp

RJMP Begin

DATA:	;2;-5
	.DB 0x00, 0x00, 0x1A, 0x1A, 0x1B, 0x1B, 0x1B, 0x1C
	.DB 0x1C, 0x1C, 0x1C, 0x1D, 0x1D, 0x1D, 0x1E, 0x1E
	.DB 0x1E, 0x1F, 0x1F, 0x1F, 0x20, 0x20, 0x20, 0x21
	.DB 0x21, 0x21, 0x22, 0x22, 0x22, 0x23, 0x23, 0x23
	.DB 0x24, 0x24, 0x24, 0x25, 0x25, 0x26, 0x26, 0x26
	.DB 0x27, 0x27, 0x28, 0x28, 0x28, 0x29, 0x29, 0x2A
	.DB 0x2A, 0x2A, 0x2B, 0x2B, 0x2C, 0x2C, 0x2C, 0x2D
	.DB 0x2D, 0x2E, 0x2E, 0x2F, 0x2F, 0x30, 0x30, 0x30
	.DB 0x31, 0x31, 0x32, 0x32, 0x33, 0x33, 0x34, 0x34
	.DB 0x35, 0x35, 0x36, 0x36, 0x37, 0x37, 0x38, 0x38
	.DB 0x39, 0x39, 0x3A, 0x3A, 0x3B, 0x3C, 0x3C, 0x3D
	.DB 0x3D, 0x3E, 0x3E, 0x3F, 0x40, 0x40, 0x41, 0x41
	.DB 0x42, 0x42, 0x43, 0x44, 0x44, 0x45, 0x46, 0x46
	.DB 0x47, 0x47, 0x48, 0x49, 0x49, 0x4A, 0x4B, 0x4B
	.DB 0x4C, 0x4D, 0x4D, 0x4E, 0x4F, 0x50, 0x50, 0x51
	.DB 0x52, 0x52, 0x53, 0x54, 0x55, 0x55, 0x56, 0x57
	.DB 0x58, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5C, 0x5D
	.DB 0x5E, 0x5F, 0x60, 0x60, 0x61, 0x62, 0x63, 0x64
	.DB 0x65, 0x66, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B
	.DB 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73
	.DB 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B
	.DB 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x83
	.DB 0x84, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C
	.DB 0x8E, 0x8F, 0x90, 0x91, 0x93, 0x94, 0x95, 0x96
	.DB 0x98, 0x99, 0x9A, 0x9B, 0x9D, 0x9E, 0x9F, 0xA1
	.DB 0xA2, 0xA3, 0xA5, 0xA6, 0xA8, 0xA9, 0xAA, 0xAC
	.DB 0xAD, 0xAF, 0xB0, 0xB2, 0xB3, 0xB5, 0xB6, 0xB8
	.DB 0xB9, 0xBB, 0xBC, 0xBE, 0xBF, 0xC1, 0xC2, 0xC4
	.DB 0xC6, 0xC7, 0xC9, 0xCB, 0xCC, 0xCE, 0xD0, 0xD1
	.DB 0xD3, 0xD5, 0xD7, 0xD8, 0xDA, 0xDC, 0xDE, 0xE0
	.DB 0xE2, 0xE3, 0xE5, 0xE7, 0xE9, 0xEB, 0xED, 0xEF
	.DB 0xF1, 0xF3, 0xF5, 0xF7, 0xF9, 0xFB, 0xFD, 0xFF


Begin:
	LDS R16, Pointer
	CLR R17
	LDI XL, LOW(Bufer)
	LDI XH, HIGH(Bufer)
	ADD XL, R16
	ADC XH, R17

	CPI R16, 0X0F	;Если R16 = 15, сбрасываем его
	BRLO TOINC
	LDI R16, 0XFF
TOINC:	INC R16
	STS Pointer, R16

	IN R16, ADCH
	
	IN R17, PINB
	ANDI R17, 1<<PB3|1<<PB4	;Если включение не разрешено, то CLR R16
	TST R17
	BRNE RUN
	CLR R16

RUN: ST X, R16

	CLR R16
	CLR R17
	CLR R19
	CLR R20
	LDI XL, LOW(Bufer)
	LDI XH, HIGH(Bufer)

Calc:
	LD R18, X+	;складываем все 16 ячеек
	ADD R16, R18
	ADC R17, R19

	INC R20
	CPI R20, 0X10
	BRLO Calc

	CLC		;делим на 16
	ROR R17
	ROR R16
	CLC
	ROR R17
	ROR R16
	CLC
	ROR R17
	ROR R16
	CLC
	ROR R17
	ROR R16
	
	RCALL Find_table
	OUT OCR0A, R16
	RCALL Find_table
	RCALL Delay
	RJMP Begin

Find_table:	; Загрузить адрес таблицы символов
	LDI ZL, LOW (2*DATA)
	LDI ZH, HIGH(2*DATA)
	; Найти нужный символ
	CLR R17
	ADD ZL, R16	
	ADC ZH, R17
	; Загрузить данные символа в R0
	LPM
	MOV R16, R0
RET


Delay:
	LDI Temp, 0	;задержка (0,0,24 - 0,5 секунды)
	MOV R6, Temp
	MOV R7, Temp

Loop1:    dec R6
          brne Loop1

          dec R7
          brne Loop1
ret
